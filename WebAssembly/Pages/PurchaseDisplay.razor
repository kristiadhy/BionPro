@page "/purchases"
@using static WebAssembly.Shared.Enum.GlobalEnum
@using static WebAssembly.Shared.Enum.DataFilterEnum

<PageTitle>@($"{ApplicationDetail.ApplicationName} | {PurchasesPageModel?.Title}")</PageTitle>

<MainMenuContainer>
    <RadzenText TextStyle="TextStyle.H5">@PurchasesPageModel?.Title</RadzenText>
    <BreadCrumb breadCrumbs="@BreadCrumbs" />
</MainMenuContainer>

<MainMenuContainer>
    <RadzenText TextStyle="TextStyle.Body1">This is your list of purchases. It shows the transactions you have done with your suppliers. Each purchase will increase the number of product items in your inventory.</RadzenText>
</MainMenuContainer>

<MainMenuContainer>
    <RadzenSplitButton Click=@(args => OnFilterButtonClick(args))
                       Icon="@filterIcon"
                       Text="@filterText"
                       Variant="Variant.Outlined"
                       Size="ButtonSize.Medium">
        <ChildContent>
            <RadzenSplitButtonItem Text="By Transaction Date" Value="@nameof(FilterCondition.ByDate)" />
            <RadzenSplitButtonItem Text="By Supplier" Value="@nameof(FilterCondition.BySupplier)" />
        </ChildContent>
    </RadzenSplitButton>

    <MainMenuButton LoadDataClicked="EvReloadData"
                    CreateNewClicked="EvCreateNew" />
</MainMenuContainer>

@if (PurchaseState.IsFilterByDateActive)
{
    <FilterByTransactionDate @bind-ParentSelectedValue="PurchaseState.FilterDateParentValue"
                             @bind-DetailSelectedValue="PurchaseState.FilterDateDetailValue"
                             @bind-StartDateValue="PurchaseState.FilterDateStartDate"
                             @bind-EndDateValue="PurchaseState.FilterDateEndDate"
                             @bind-IsFilterSet="PurchaseState.IsFilterSet"
                             @bind-IsFilterByDateActive="PurchaseState.IsFilterByDateActive"
                             ButtonClearFilterClicked="ButtonClearFilterClicked" />
}


@if (PurchaseState.IsFilterBySupplierActive)
{
    <FilterBySupplier @bind-SupplierIDValue="PurchaseState.FilterSupplierByID"
                      @bind-SupplierNameValue="PurchaseState.FilterSupplierByName"
                      @bind-IsFilterBySupplierActive="PurchaseState.IsFilterBySupplierActive"
                      ButtonClearFilterClicked="ButtonClearFilterClicked" />
}

<RadzenDataGrid @ref="PurchaseGrid"
                IsLoading=@isLoading
                Data="@PurchaseState.PurchaseListForSummary"
                TItem="PurchaseDtoForSummary"
                SelectionMode="DataGridSelectionMode.Single"
                AllowSorting="true"
                AllowFiltering="false"
                AllowColumnResize="true"
                AllowColumnReorder="false"
                GridLines="DataGridGridLines.Both"
                ColumnWidth="150px"
                class="my-4">
    <Columns>
        <RadzenDataGridColumn Width="50px"
                              Title="#" Filterable="false"
                              Sortable="false"
                              TextAlign="TextAlign.Center">
            <Template Context="data">
                @(PurchaseState.PurchaseListForSummary.IndexOf(data) + 1)
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="PurchaseID"
                              Visible=false
                              Filterable="false"
                              Title="ID"
                              TextAlign="TextAlign.Center">
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="TransactionCode"
                              Title="Code" />

        <RadzenDataGridColumn Property="Date"
                              Title="Date"
                              FormatString="{0:g}"
                              Frozen="true">
            <Template Context="data">
                @* @String.Format(new System.Globalization.CultureInfo("en-US"), "{0:g}", date.Date) *@
                @data.Date.ToString("dd/MM/yyyy HH:mm")
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Property="@nameof(PurchaseDtoForSummary.SupplierName)"
                              Title="Supplier" />

        <RadzenDataGridColumn Property="@nameof(PurchaseDtoForSummary.TotalQuantity)"
                              Title="Total Qty"
                              TextAlign="TextAlign.Center"
                              Width="80px"
                              FormatString="{0:n0}" />

        <RadzenDataGridColumn Property="@nameof(PurchaseDtoForSummary.GrandTotal)"
                              Title="Grand Total"
                              TextAlign="TextAlign.Right"
                              FormatString="{0:c}" />

        <RadzenDataGridColumn Property="@nameof(PurchaseDtoForSummary.Description)"
                              Title="Description" />

        <RadzenDataGridColumn Property="@nameof(PurchaseDtoForSummary.PaymentStatus)"
                              Title="Status"
                              Width="75px"
                              TextAlign="TextAlign.Center">
            <Template Context="data">
                @if (data.PaymentStatus)
                {
                    <RadzenLabel class="rz-background-color-success text-white py-1 px-2">Paid</RadzenLabel>
                }
                @if (!data.PaymentStatus)
                {
                    <RadzenLabel class="rz-background-color-danger text-white py-1 px-2">Unpaid</RadzenLabel>
                }
            </Template>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn Context="Action"
                              Title="Action"
                              Filterable="false"
                              Sortable="false"
                              TextAlign="TextAlign.Left"
                              Frozen="true"
                              FrozenPosition="FrozenColumnPosition.Right">

            <Template Context="dto">
                <RadzenButton Icon="edit"
                              ButtonStyle="ButtonStyle.Light"
                              Variant="Variant.Flat"
                              Size="ButtonSize.Medium"
                              MouseEnter="@((args) => CustomTooltipService.ShowBottomTooltip(args, TableAction.Edit.ToString()))"
                              Click="@(args => EvEditRow(dto))"
                              @onclick:stopPropagation="true">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger"
                              Icon="delete"
                              Variant="Variant.Flat"
                              Shade="Shade.Lighter"
                              Size="ButtonSize.Medium"
                              class="my-1 ms-1"
                              MouseEnter="@((args) => CustomTooltipService.ShowBottomTooltip(args, TableAction.Delete.ToString()))"
                              Click="@(args => EvDeleteRow(dto))"
                              @onclick:stopPropagation="true">
                </RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Info"
                              Icon="visibility"
                              Variant="Variant.Flat"
                              Shade="Shade.Lighter"
                              Size="ButtonSize.Medium"
                              class="my-1 ms-1"
                              MouseEnter="@((args) => CustomTooltipService.ShowBottomTooltip(args, TableAction.Detail.ToString()))"
                              Click="@(args => EvSeeDetail(dto))"
                              @onclick:stopPropagation="true">
                </RadzenButton>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

<Pager @ref="Pager"
       PageSize="@PurchaseState.MetaData.PageSize"
       TotalCount="@PurchaseState.MetaData.TotalCount"
       CurrentPage="PurchaseState.PurchaseParameter.PageNumber"
       PageChanged="@(args => PageChanged(args))" />